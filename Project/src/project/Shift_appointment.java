/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author Htet Htet
 */

public class Shift_appointment extends javax.swing.JFrame {
    Connection conn = null;
    PreparedStatement stmt = null;
    String id;                              //Änderung 11.01.2022
    /**
     * Creates new form Shift_appointment
     */
    
    public Shift_appointment(String ID) {
        id = ID;                            //Änderung 11.01.2022
        System.out.println(id);
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2, size.height/2 - getHeight()/2);   // to get window in center
        Filecombo();
    }

    private Shift_appointment() { //Änderung 11.01.2022
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public String database(String query,String column) throws ClassNotFoundException
    {
            String data = null;
            Connection conn = null;
            PreparedStatement stmt = null;
            String url = "jdbc:mysql://127.0.0.1:3306/Appointment";
            String uname = "root";
            String pwd = "hHw01cherry";
            Class.forName("com.mysql.cj.jdbc.Driver");
            
       try { 
            conn = (Connection) DriverManager.getConnection(url,uname,pwd);
            stmt = conn.prepareStatement(query);
            stmt.setString(1,id);           //Änderung 11.01.2022

            ResultSet rs = stmt.executeQuery();
            rs.next();
            data = rs.getString(column);
            
        } catch (SQLException ex) {
        }
        return data;
    }
     private void Filecombo()               
        {
            try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                conn = (Connection) DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Appointment","root","hHw01cherry");
                String sql = "select * from app where ID = ?"; //Änderung 11.01.2022
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1,id);    //Änderung 11.01.2022
                
                ResultSet rs = pst.executeQuery();
                while(rs.next())
                {
                    String name = rs.getString("Date")+" "+rs.getString("Time");
                    jComboBox1.addItem(name);
                }
            }
            catch(Exception e)
            {
                
            }
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        JDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        Time = new javax.swing.JTextField();
        JComboBox_reminder = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Shift an Appointment");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Old Appointment");

        jLabel4.setText("Date");

        jLabel5.setText("Time");

        Time.setText("HH:MM:SS");

        JComboBox_reminder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 week", "3 days", "1 hour", "10 minutes" }));

        jLabel6.setText("Reminder");

        jButton1.setText("Shift");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("New Appointment");

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(69, 69, 69)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JComboBox_reminder, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(113, 113, 113))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(58, 58, 58))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(JComboBox_reminder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(JDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this,"Do you want to shift your Appointment?","Confirm",JOptionPane.YES_NO_OPTION);
        if(response == JOptionPane.YES_OPTION){
            try {
                String url ="jdbc:mysql://127.0.0.1:3306/Appointment";
                String uname = "root";  
                String password = "hHw01cherry";
                String query = "Update app set Date=? , Time =?, Reminder=? where Date=? AND Time=?";
                conn = DriverManager.getConnection(url,uname,password);
                stmt = conn.prepareStatement(query);
           
                String data = jComboBox1.getSelectedItem().toString();
                String[] str = data.split(" ");
                String old_date = str[0];
                String old_time = str[1];
                System.out.println(old_date+"\n");
                System.out.println(old_time);
 
            /*
            Date old_datum = jDateChooser1.getDate();
            String old_date = new SimpleDateFormat("dd-MM-yyyy").format(old_datum);
            String old_time = jTextField1.getText();
            //System.out.println(old_time);
            System.out.println(old_date);
                
            */

                
            //kein Test
            
            Date datum = JDateChooser.getDate();
            String date = new SimpleDateFormat("dd-MM-yyyy").format(datum);
            String time = Time.getText();
            stmt.setString(1,date);
            stmt.setString(2,time);  

            String reminder = JComboBox_reminder.getSelectedItem().toString();
            stmt.setString(3,reminder);
            stmt.setString(4,old_date); 
            stmt.setString(5,old_time);
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Updated");
                       
            Date startdata;
            
            startdata = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").parse(date+" "+time);
            String date_ = new SimpleDateFormat("dd-MM-yyy HH:mm:ss").format(startdata);
            //Date zeit = new Date(date_);
            System.out.println("Appointment time:"+date_);
            long time2 = startdata.getTime();
            
            int remindertype = 0;
            switch(reminder)
            {
                case "1 week"-> 
                    {
                        remindertype = 1;
                        time2 = time2-(7 * 24 * 60 * 60 * 1000);
                    }
                case "3 days"->
                {
                    remindertype = 2;
                    time2 = time2-(3 * 24 * 60 * 60 * 1000);

                }
                case "1 hour"->
                {
                    remindertype = 3;
                    time2 = time2-(60 * 60 * 1000);

                }
                case "10 minutes"->
                {
                    remindertype = 4;
                    time2 = time2-(10 * 60 * 1000);

                }
                    
            }
            //Time that when a appointment is added
            //DateFormat confirm = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
            Date date2 = new Date();
            //confirm.format(date2);
            //String date3 = new SimpleDateFormat("dd-MM-yyy HH:mm:ss").format(date2);
            Date remindert = new Date(time2);
            String reminders = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(remindert);
            // date2 = the time that sent the confirmation mail
            // reminders = the time that sent the reminder mail
            // date_ = the time of appointment

            //Get the mail address from Database and sent reminder & confirmation mail
            String mail= database("SELECT email from register where ID = ?","email");       //Änderung 11.01.2022
            String[] receiverList = mail.split(" ");
            
            //Reminder mail
            Email mail_ = new Email(date_,receiverList);
            mail_.senden(1);            

            mail_.reminder_funktion(remindertype,remindert);
            
            }
            catch(HeadlessException | ClassNotFoundException | SQLException | ParseException e) {
 
                JOptionPane.showMessageDialog(null, e);
            }             
        
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        LoggedinAsPatient app = new LoggedinAsPatient(id);
        app.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Shift_appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Shift_appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Shift_appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Shift_appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Shift_appointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JComboBox_reminder;
    private com.toedter.calendar.JDateChooser JDateChooser;
    private javax.swing.JTextField Time;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
