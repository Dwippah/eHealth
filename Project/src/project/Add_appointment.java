/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.util.Date;

         
/**
 *
 * @author Htet Htet
 */

public class Add_appointment extends javax.swing.JFrame {
    //private Integer userid;
   
    Connection conn = null;
    PreparedStatement stmt = null;
    String id;

    private Add_appointment() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public String database(String query,String column) throws ClassNotFoundException
    {
            String data = null;
            Connection conn = null;
            PreparedStatement stmt = null;
            String url = "jdbc:mysql://127.0.0.1:3306/Appointment";
            String uname = "root";
            String pwd = "hHw01cherry";
            Class.forName("com.mysql.cj.jdbc.Driver");
            
       try { 
            conn = (Connection) DriverManager.getConnection(url,uname,pwd);
            stmt = conn.prepareStatement(query);
            stmt.setString(1,id);       //Änderung 11.01.2022
            ResultSet rs = stmt.executeQuery();
            rs.next();
            data = rs.getString(column);
            
        } catch (SQLException ex) {
        }
        return data;
    }

    public Add_appointment(String ID) {
        id = ID;                        //Änderung 11.01.2022
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2, size.height/2 - getHeight()/2);   // to get window in center
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1_time = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1_reminder = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add an Appointment");
        jLabel1.setToolTipText("");

        jTextField1_time.setText("HH:MM:SS");
        jTextField1_time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1_timeActionPerformed(evt);
            }
        });

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1_reminder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 week", "3 days", "1 hour", "10 minutes" }));
        jComboBox1_reminder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1_reminderActionPerformed(evt);
            }
        });

        jLabel2.setText("Reminder");

        jLabel3.setText("Time");

        jLabel4.setText("Date");

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 49, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(114, 114, 114)
                        .addComponent(jButton1)
                        .addGap(66, 66, 66))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1_time, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1_reminder, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1_reminder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String url = "jdbc:mysql://127.0.0.1:3306/Appointment";
            String uname = "root";
            String pwd = "hHw01cherry";
            //Register Driver Class
            Class.forName("com.mysql.cj.jdbc.Driver");
            //Queries
            String query = "INSERT INTO app VALUES (?,?,?,?,?);";
            String query2 = "SELECT last_name from register where ID = ?";//Änderung 11.01.2022
            //Connection to the database
            //Url,name,pwd
            conn = (Connection) DriverManager.getConnection(url,uname,pwd);          
            stmt = conn.prepareStatement(query);
            PreparedStatement stmt2 = conn.prepareStatement(query2);
            stmt2.setString(1,id);          //Änderung 11.01.2022

            ResultSet rs = stmt2.executeQuery();
            rs.next();
            String name = rs.getString("last_name");
            Date datum = jDateChooser1.getDate();
            String date = new SimpleDateFormat("dd-MM-yyyy").format(datum);
            String reminder = jComboBox1_reminder.getSelectedItem().toString();
            String time = jTextField1_time.getText();
            Date startdata;            
            startdata = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").parse(date+" "+time);
            String date_ = new SimpleDateFormat("dd-MM-yyy HH:mm:ss").format(startdata);
            /* for Error handling
            Date now = new Date();
            System.out.println(now);
            Date new_startdata = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(date+" "+time);
            */
            
            //return 0 if both dates are equal
            //if (now.compareTo(new_startdata)>0) {   
            //jLabel1.setText("Add new Meeting: ERROR wrong Meetingtime");
            //}
            //else{
            System.out.println("Appointment time:"+date_);
            long time2 = startdata.getTime();
            stmt.setString(1,id);               //Änderung 11.01.2022
            stmt.setString(2,name);
            stmt.setString(3,date);
            stmt.setString(4,time);
            stmt.setString(5,reminder);
            
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null,"Added an Appointment");
            
            int remindertype = 0;
            switch(reminder)
            {
                case "1 week"-> 
                    {
                        remindertype = 1;
                        time2 = time2-(7 * 24 * 60 * 60 * 1000);
                    }
                case "3 days"->
                {
                    remindertype = 2;
                    time2 = time2-(3 * 24 * 60 * 60 * 1000);

                }
                case "1 hour"->
                {
                    remindertype = 3;
                    time2 = time2-(60 * 60 * 1000);

                }
                case "10 minutes"->
                {
                    remindertype = 4;
                    time2 = time2-(10 * 60 * 1000);

                }
                    
            }
            //Time that when a appointment is added
            //DateFormat confirm = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
            Date date2 = new Date();
            //confirm.format(date2);
            //String date3 = new SimpleDateFormat("dd-MM-yyy HH:mm:ss").format(date2);
            Date remindert = new Date(time2);
            String reminders = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(remindert);
            // date2 = the time that sent the confirmation mail
            // reminders = the time that sent the reminder mail
            // date_ = the time of appointment
            System.out.println("Confirmation:"+date2);
            System.out.println("Reminder:"+reminders);
            
            //Get the mail address from Database
            String mail= database("SELECT email from register where ID = ?","email"); //Änderung 11.01.2022
            String[] receiverList = mail.split(" ");
            Email mail_ = new Email(date_,receiverList);
            //Confirmation mail
            mail_.senden(4);
            
            //Reminder mail
            mail_.reminder_funktion(remindertype,remindert);
            //
            //Confirmation mail not needed anymore
            //Email_confirm confirm2 = new Email_confirm(date_,receiverList);
            //Email_confirm confirm2 = new Email_confirm(date3,receiverList);
            //confirm2.confirmation(date2);
            //confirm2.confirmation_mail();
        } catch (SQLException | ClassNotFoundException | ParseException ex) {
            Logger.getLogger(Add_appointment.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {  
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Add_appointment.class.getName()).log(Level.SEVERE, null, ex);
        }
        //After adding an appointment 
        PopUp_pdf pdf = new PopUp_pdf(id);
        pdf.setVisible(true);
        setVisible(false);
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1_timeActionPerformed

    private void jComboBox1_reminderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1_reminderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1_reminderActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        LoggedinAsPatient app = new LoggedinAsPatient(id);
        app.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Add_appointment().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1_reminder;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1_time;
    // End of variables declaration//GEN-END:variables
}
